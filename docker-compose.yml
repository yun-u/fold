version: "3.8"
services:
  redis:
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"
    environment:
      - REDIS_ARGS=--save 300 1 --save 60 5
    volumes:
      - "redis-data:/data"

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"

  xservice:
    ports:
      - 50051:50051
    build:
      context: ./backend
      dockerfile: xservice.dockerfile
    env_file:
      - .env

  celery:
    volumes:
      - "./backend/app:/app/app"
      - "./backend/onnx_model:/app/onnx_model"
      - "arxiv:/arxiv"
    build:
      context: ./backend
      dockerfile: celery.dockerfile
    depends_on:
      - redis
      - rabbitmq
    env_file:
      - .env

  backend:
    ports:
      - "8000:8000"
    volumes:
      - "./backend/app:/app/app"
      - "./backend/onnx_model:/app/onnx_model"
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    depends_on:
      - redis
      - rabbitmq
      - celery
    env_file:
      - .env

  frontend:
    ports:
      - "3000:3000"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend

  nginx:
    image: nginx:1.25.3
    ports:
      - "80:80"
    volumes:
      - "./frontend/nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - backend
      - frontend

volumes:
  arxiv:
  redis-data:
